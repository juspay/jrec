-- Generated with cabal run -v0 bin/genrecord > src/JRec/Tuple.hs

{-# LANGUAGE TypeOperators, DataKinds, FlexibleInstances, MultiParamTypeClasses #-}
{-# LANGUAGE FunctionalDependencies, GADTs, UndecidableInstances #-}

module JRec.Tuple where

import qualified JRec.Internal as R
import Unsafe.Coerce

class RecTuple tuple fields | tuple -> fields, fields -> tuple where
  fromTuple :: tuple -> R.Rec fields
  toTuple :: R.Rec fields -> tuple


instance RecTuple () '[] where
  fromTuple _ = R.rnil
  toTuple _ = ()

instance ((n1 R.:= v1) ~ f1) => RecTuple (n1 R.:= v1) '[f1] where
  fromTuple (f1) = R.create $ R.unsafeRCons f1 =<<  R.unsafeRNil 1
  toTuple r = let [f1] = R.getFields r in unsafeCoerce (f1)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2) => RecTuple (n1 R.:= v1, n2 R.:= v2) '[f1, f2] where
  fromTuple (f1, f2) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<<  R.unsafeRNil 2
  toTuple r = let [f1, f2] = R.getFields r in unsafeCoerce (f1, f2)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3) '[f1, f2, f3] where
  fromTuple (f1, f2, f3) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<<  R.unsafeRNil 3
  toTuple r = let [f1, f2, f3] = R.getFields r in unsafeCoerce (f1, f2, f3)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4) '[f1, f2, f3, f4] where
  fromTuple (f1, f2, f3, f4) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<<  R.unsafeRNil 4
  toTuple r = let [f1, f2, f3, f4] = R.getFields r in unsafeCoerce (f1, f2, f3, f4)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5) '[f1, f2, f3, f4, f5] where
  fromTuple (f1, f2, f3, f4, f5) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<<  R.unsafeRNil 5
  toTuple r = let [f1, f2, f3, f4, f5] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6) '[f1, f2, f3, f4, f5, f6] where
  fromTuple (f1, f2, f3, f4, f5, f6) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<<  R.unsafeRNil 6
  toTuple r = let [f1, f2, f3, f4, f5, f6] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7) '[f1, f2, f3, f4, f5, f6, f7] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<<  R.unsafeRNil 7
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8) '[f1, f2, f3, f4, f5, f6, f7, f8] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<<  R.unsafeRNil 8
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9) '[f1, f2, f3, f4, f5, f6, f7, f8, f9] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<<  R.unsafeRNil 9
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<<  R.unsafeRNil 10
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<<  R.unsafeRNil 11
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<<  R.unsafeRNil 12
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<<  R.unsafeRNil 13
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<<  R.unsafeRNil 14
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<<  R.unsafeRNil 15
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<<  R.unsafeRNil 16
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<<  R.unsafeRNil 17
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<<  R.unsafeRNil 18
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<<  R.unsafeRNil 19
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<<  R.unsafeRNil 20
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<<  R.unsafeRNil 21
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<<  R.unsafeRNil 22
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<<  R.unsafeRNil 23
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<<  R.unsafeRNil 24
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<<  R.unsafeRNil 25
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<<  R.unsafeRNil 26
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<<  R.unsafeRNil 27
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<<  R.unsafeRNil 28
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<<  R.unsafeRNil 29
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<<  R.unsafeRNil 30
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<<  R.unsafeRNil 31
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<<  R.unsafeRNil 32
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<<  R.unsafeRNil 33
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<<  R.unsafeRNil 34
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<<  R.unsafeRNil 35
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<<  R.unsafeRNil 36
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<<  R.unsafeRNil 37
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<<  R.unsafeRNil 38
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<<  R.unsafeRNil 39
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<<  R.unsafeRNil 40
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<<  R.unsafeRNil 41
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<<  R.unsafeRNil 42
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<<  R.unsafeRNil 43
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<<  R.unsafeRNil 44
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<<  R.unsafeRNil 45
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<<  R.unsafeRNil 46
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<<  R.unsafeRNil 47
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<<  R.unsafeRNil 48
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<<  R.unsafeRNil 49
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<<  R.unsafeRNil 50
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<<  R.unsafeRNil 51
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<<  R.unsafeRNil 52
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52, (n53 R.:= v53) ~ f53) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52, n53 R.:= v53) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<< R.unsafeRCons f53 =<<  R.unsafeRNil 53
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52, (n53 R.:= v53) ~ f53, (n54 R.:= v54) ~ f54) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52, n53 R.:= v53, n54 R.:= v54) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<< R.unsafeRCons f53 =<< R.unsafeRCons f54 =<<  R.unsafeRNil 54
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52, (n53 R.:= v53) ~ f53, (n54 R.:= v54) ~ f54, (n55 R.:= v55) ~ f55) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52, n53 R.:= v53, n54 R.:= v54, n55 R.:= v55) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<< R.unsafeRCons f53 =<< R.unsafeRCons f54 =<< R.unsafeRCons f55 =<<  R.unsafeRNil 55
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52, (n53 R.:= v53) ~ f53, (n54 R.:= v54) ~ f54, (n55 R.:= v55) ~ f55, (n56 R.:= v56) ~ f56) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52, n53 R.:= v53, n54 R.:= v54, n55 R.:= v55, n56 R.:= v56) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<< R.unsafeRCons f53 =<< R.unsafeRCons f54 =<< R.unsafeRCons f55 =<< R.unsafeRCons f56 =<<  R.unsafeRNil 56
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52, (n53 R.:= v53) ~ f53, (n54 R.:= v54) ~ f54, (n55 R.:= v55) ~ f55, (n56 R.:= v56) ~ f56, (n57 R.:= v57) ~ f57) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52, n53 R.:= v53, n54 R.:= v54, n55 R.:= v55, n56 R.:= v56, n57 R.:= v57) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<< R.unsafeRCons f53 =<< R.unsafeRCons f54 =<< R.unsafeRCons f55 =<< R.unsafeRCons f56 =<< R.unsafeRCons f57 =<<  R.unsafeRNil 57
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52, (n53 R.:= v53) ~ f53, (n54 R.:= v54) ~ f54, (n55 R.:= v55) ~ f55, (n56 R.:= v56) ~ f56, (n57 R.:= v57) ~ f57, (n58 R.:= v58) ~ f58) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52, n53 R.:= v53, n54 R.:= v54, n55 R.:= v55, n56 R.:= v56, n57 R.:= v57, n58 R.:= v58) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<< R.unsafeRCons f53 =<< R.unsafeRCons f54 =<< R.unsafeRCons f55 =<< R.unsafeRCons f56 =<< R.unsafeRCons f57 =<< R.unsafeRCons f58 =<<  R.unsafeRNil 58
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52, (n53 R.:= v53) ~ f53, (n54 R.:= v54) ~ f54, (n55 R.:= v55) ~ f55, (n56 R.:= v56) ~ f56, (n57 R.:= v57) ~ f57, (n58 R.:= v58) ~ f58, (n59 R.:= v59) ~ f59) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52, n53 R.:= v53, n54 R.:= v54, n55 R.:= v55, n56 R.:= v56, n57 R.:= v57, n58 R.:= v58, n59 R.:= v59) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<< R.unsafeRCons f53 =<< R.unsafeRCons f54 =<< R.unsafeRCons f55 =<< R.unsafeRCons f56 =<< R.unsafeRCons f57 =<< R.unsafeRCons f58 =<< R.unsafeRCons f59 =<<  R.unsafeRNil 59
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52, (n53 R.:= v53) ~ f53, (n54 R.:= v54) ~ f54, (n55 R.:= v55) ~ f55, (n56 R.:= v56) ~ f56, (n57 R.:= v57) ~ f57, (n58 R.:= v58) ~ f58, (n59 R.:= v59) ~ f59, (n60 R.:= v60) ~ f60) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52, n53 R.:= v53, n54 R.:= v54, n55 R.:= v55, n56 R.:= v56, n57 R.:= v57, n58 R.:= v58, n59 R.:= v59, n60 R.:= v60) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<< R.unsafeRCons f53 =<< R.unsafeRCons f54 =<< R.unsafeRCons f55 =<< R.unsafeRCons f56 =<< R.unsafeRCons f57 =<< R.unsafeRCons f58 =<< R.unsafeRCons f59 =<< R.unsafeRCons f60 =<<  R.unsafeRNil 60
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52, (n53 R.:= v53) ~ f53, (n54 R.:= v54) ~ f54, (n55 R.:= v55) ~ f55, (n56 R.:= v56) ~ f56, (n57 R.:= v57) ~ f57, (n58 R.:= v58) ~ f58, (n59 R.:= v59) ~ f59, (n60 R.:= v60) ~ f60, (n61 R.:= v61) ~ f61) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52, n53 R.:= v53, n54 R.:= v54, n55 R.:= v55, n56 R.:= v56, n57 R.:= v57, n58 R.:= v58, n59 R.:= v59, n60 R.:= v60, n61 R.:= v61) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<< R.unsafeRCons f53 =<< R.unsafeRCons f54 =<< R.unsafeRCons f55 =<< R.unsafeRCons f56 =<< R.unsafeRCons f57 =<< R.unsafeRCons f58 =<< R.unsafeRCons f59 =<< R.unsafeRCons f60 =<< R.unsafeRCons f61 =<<  R.unsafeRNil 61
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61)

instance ((n1 R.:= v1) ~ f1, (n2 R.:= v2) ~ f2, (n3 R.:= v3) ~ f3, (n4 R.:= v4) ~ f4, (n5 R.:= v5) ~ f5, (n6 R.:= v6) ~ f6, (n7 R.:= v7) ~ f7, (n8 R.:= v8) ~ f8, (n9 R.:= v9) ~ f9, (n10 R.:= v10) ~ f10, (n11 R.:= v11) ~ f11, (n12 R.:= v12) ~ f12, (n13 R.:= v13) ~ f13, (n14 R.:= v14) ~ f14, (n15 R.:= v15) ~ f15, (n16 R.:= v16) ~ f16, (n17 R.:= v17) ~ f17, (n18 R.:= v18) ~ f18, (n19 R.:= v19) ~ f19, (n20 R.:= v20) ~ f20, (n21 R.:= v21) ~ f21, (n22 R.:= v22) ~ f22, (n23 R.:= v23) ~ f23, (n24 R.:= v24) ~ f24, (n25 R.:= v25) ~ f25, (n26 R.:= v26) ~ f26, (n27 R.:= v27) ~ f27, (n28 R.:= v28) ~ f28, (n29 R.:= v29) ~ f29, (n30 R.:= v30) ~ f30, (n31 R.:= v31) ~ f31, (n32 R.:= v32) ~ f32, (n33 R.:= v33) ~ f33, (n34 R.:= v34) ~ f34, (n35 R.:= v35) ~ f35, (n36 R.:= v36) ~ f36, (n37 R.:= v37) ~ f37, (n38 R.:= v38) ~ f38, (n39 R.:= v39) ~ f39, (n40 R.:= v40) ~ f40, (n41 R.:= v41) ~ f41, (n42 R.:= v42) ~ f42, (n43 R.:= v43) ~ f43, (n44 R.:= v44) ~ f44, (n45 R.:= v45) ~ f45, (n46 R.:= v46) ~ f46, (n47 R.:= v47) ~ f47, (n48 R.:= v48) ~ f48, (n49 R.:= v49) ~ f49, (n50 R.:= v50) ~ f50, (n51 R.:= v51) ~ f51, (n52 R.:= v52) ~ f52, (n53 R.:= v53) ~ f53, (n54 R.:= v54) ~ f54, (n55 R.:= v55) ~ f55, (n56 R.:= v56) ~ f56, (n57 R.:= v57) ~ f57, (n58 R.:= v58) ~ f58, (n59 R.:= v59) ~ f59, (n60 R.:= v60) ~ f60, (n61 R.:= v61) ~ f61, (n62 R.:= v62) ~ f62) => RecTuple (n1 R.:= v1, n2 R.:= v2, n3 R.:= v3, n4 R.:= v4, n5 R.:= v5, n6 R.:= v6, n7 R.:= v7, n8 R.:= v8, n9 R.:= v9, n10 R.:= v10, n11 R.:= v11, n12 R.:= v12, n13 R.:= v13, n14 R.:= v14, n15 R.:= v15, n16 R.:= v16, n17 R.:= v17, n18 R.:= v18, n19 R.:= v19, n20 R.:= v20, n21 R.:= v21, n22 R.:= v22, n23 R.:= v23, n24 R.:= v24, n25 R.:= v25, n26 R.:= v26, n27 R.:= v27, n28 R.:= v28, n29 R.:= v29, n30 R.:= v30, n31 R.:= v31, n32 R.:= v32, n33 R.:= v33, n34 R.:= v34, n35 R.:= v35, n36 R.:= v36, n37 R.:= v37, n38 R.:= v38, n39 R.:= v39, n40 R.:= v40, n41 R.:= v41, n42 R.:= v42, n43 R.:= v43, n44 R.:= v44, n45 R.:= v45, n46 R.:= v46, n47 R.:= v47, n48 R.:= v48, n49 R.:= v49, n50 R.:= v50, n51 R.:= v51, n52 R.:= v52, n53 R.:= v53, n54 R.:= v54, n55 R.:= v55, n56 R.:= v56, n57 R.:= v57, n58 R.:= v58, n59 R.:= v59, n60 R.:= v60, n61 R.:= v61, n62 R.:= v62) '[f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62] where
  fromTuple (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62) = R.create $ R.unsafeRCons f1 =<< R.unsafeRCons f2 =<< R.unsafeRCons f3 =<< R.unsafeRCons f4 =<< R.unsafeRCons f5 =<< R.unsafeRCons f6 =<< R.unsafeRCons f7 =<< R.unsafeRCons f8 =<< R.unsafeRCons f9 =<< R.unsafeRCons f10 =<< R.unsafeRCons f11 =<< R.unsafeRCons f12 =<< R.unsafeRCons f13 =<< R.unsafeRCons f14 =<< R.unsafeRCons f15 =<< R.unsafeRCons f16 =<< R.unsafeRCons f17 =<< R.unsafeRCons f18 =<< R.unsafeRCons f19 =<< R.unsafeRCons f20 =<< R.unsafeRCons f21 =<< R.unsafeRCons f22 =<< R.unsafeRCons f23 =<< R.unsafeRCons f24 =<< R.unsafeRCons f25 =<< R.unsafeRCons f26 =<< R.unsafeRCons f27 =<< R.unsafeRCons f28 =<< R.unsafeRCons f29 =<< R.unsafeRCons f30 =<< R.unsafeRCons f31 =<< R.unsafeRCons f32 =<< R.unsafeRCons f33 =<< R.unsafeRCons f34 =<< R.unsafeRCons f35 =<< R.unsafeRCons f36 =<< R.unsafeRCons f37 =<< R.unsafeRCons f38 =<< R.unsafeRCons f39 =<< R.unsafeRCons f40 =<< R.unsafeRCons f41 =<< R.unsafeRCons f42 =<< R.unsafeRCons f43 =<< R.unsafeRCons f44 =<< R.unsafeRCons f45 =<< R.unsafeRCons f46 =<< R.unsafeRCons f47 =<< R.unsafeRCons f48 =<< R.unsafeRCons f49 =<< R.unsafeRCons f50 =<< R.unsafeRCons f51 =<< R.unsafeRCons f52 =<< R.unsafeRCons f53 =<< R.unsafeRCons f54 =<< R.unsafeRCons f55 =<< R.unsafeRCons f56 =<< R.unsafeRCons f57 =<< R.unsafeRCons f58 =<< R.unsafeRCons f59 =<< R.unsafeRCons f60 =<< R.unsafeRCons f61 =<< R.unsafeRCons f62 =<<  R.unsafeRNil 62
  toTuple r = let [f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62] = R.getFields r in unsafeCoerce (f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, f21, f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40, f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62)

